#include<bits/stdc++.h>
using namespace std;
//差分约束，将问题转换为求带负权边的有向图中求最长路径，spfa求解 参考博客https://blog.csdn.net/u014390156/article/details/82775736
int a[305],dis[305],visit[305];
int m[301][301];//m(i,j)表示Si到Sj的有向边 
int n;

void spfa()
{
	queue<int> q;
	for(int i=0;i<=n;i++)
	{
		dis[i]=0;
		visit[i]=0;
	}
	visit[0]=1;
	q.push(0);
	while(!q.empty())
	{
		int x=q.front();
		q.pop();
		visit[x]=0;
		for(int i=0;i<=n;i++)
		{
			if(m[x][i]!=0)
			{
				if(dis[i]<dis[x]+m[x][i])
				{
					dis[i]=dis[x]+m[x][i];
					if(visit[i]==0)
					{
						q.push(i);
						visit[i]=1;
					}
						
				}
			}
		}
	}
}


int main()
{
	freopen("c.in","r",stdin);
	cin>>n;
	for(int i=1;i<=n;i++)
		cin>>a[i];
		
	for(int i=0;i<=300;i++)
		for(int j=0;j<=300;j++)
			m[i][j]=0;
		
	m[0][2]=2*a[1];
	m[2][0]=-1*(2*a[1]+1);
	for(int i=2;i<=n-1;i++)
	{
		m[i-2][i+1]=3*a[i];
		m[i+1][i-2]=-1*(3*a[i]+2);
	}
	m[n-2][n]=2*a[n];
	m[n][n-2]=-1*(2*a[n]+1);
	for(int i=1;i<=n;i++)
		m[i-1][i]=1;//xi(即si-s(i-1))>=1得来
	spfa();
	a[1]=dis[1];
	for(int i=2;i<=n;i++)
		a[i]=dis[i]-dis[i-1];
	for(int i=1;i<=n;i++)
		cout<<a[i]<<" ";
}
