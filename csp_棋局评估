//参考博客https://blog.csdn.net/xbb224007/article/details/79935167
#include<bits/stdc++.h>
using namespace std;
int g[4][4];

int gets(int f)
{// 0 1
	int ans=1;
	for(int i=1;i<=3;i++)
		for(int j=1;j<=3;j++)
			if(!g[i][j]) ans++;
	if(ans==1) return 0;
	ans=(f)? -ans:ans;
	return ans;
}

bool winr(int f,int r)
{//1 2
	return (g[r][1]==f&&g[r][1]==g[r][2]&&g[r][2]==g[r][3]);
}
bool winc(int f,int c)
{//1  2
	return (g[1][c]==f&&g[1][c]==g[2][c]&&g[2][c]==g[3][c]);
}
bool win(int f)
{// 1  2 
	for(int i=1;i<=3;i++)
	{
		if(winr(f,i)||winc(f,i)) return 1;
	}
	if(g[1][1]==f&&g[1][1]==g[2][2]&&g[2][2]==g[3][3]) return 1;
	if(g[1][3]==f&&g[1][3]==g[2][2]&&g[2][2]==g[3][1]) return 1;
	return 0;
}

int dfs(int f)
{//0 alice下 1 Bob下 
	if(!gets(f)) return 0;
	int Max=-10,Min=10;
	for(int i=1;i<=3;i++)
	{
		for(int j=1;j<=3;j++)
		{
			if(g[i][j]) continue;
			g[i][j]=f+1;
			if(win(f+1))
			{
				int w=gets(f);
				if(!w) w++;//刚好下满棋盘的情况 
				g[i][j]=0;
				return (f)? min(Min,w):max(Max,w);
			}
			if(f) Min=min(Min,dfs(0));
			else Max=max(Max,dfs(1));
			g[i][j]=0;
		}
	}
	return f? Min:Max;
}
int main()
{
	//freopen("c2.in","r",stdin);
	int n;
	cin>>n;
	for(int k=0;k<n;k++)
	{
		//if(k) continue;
		for(int i=1;i<=3;i++)
			for(int j=1;j<=3;j++)
				cin>>g[i][j];
		if(win(1)){cout<<gets(0)<<endl;continue;}
		if(win(2)){cout<<gets(1)<<endl;continue;}
		cout<<dfs(0)<<endl;
	}
	return 0;
	
}
